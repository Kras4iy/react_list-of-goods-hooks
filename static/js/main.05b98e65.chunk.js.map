{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","randomValues","Array","length","fill","map","x","Math","random","App","useState","start","setStart","sortType","setSortType","reverse","setReverse","minLength","setLength","className","type","onClick","value","onChange","event","target","_","index","classnames","visibleGoods","filter","good","sort","item1","item2","localeCompare","getReorderedGoods","ReactDOM","render","document","getElementById"],"mappings":"0OAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,IAAIC,MAAMF,EAAgBG,QAC5CC,KAAK,GAAGC,KAAI,SAAAC,GAAC,OAAIA,EAAIC,KAAKC,YAEhBC,EAAgB,WAC3B,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA+BN,mBAAS,GAAxC,mBAAOO,EAAP,KAAkBC,EAAlB,KA8CA,OACE,sBAAKC,UAAU,MAAf,WACIR,GACA,wBACES,KAAK,SACLD,UAAU,SACVE,QA5BU,WAChBT,GAAS,IAwBL,mBASDD,GACC,qCACE,oDAEE,wBACEW,MAAOL,EACPE,UAAU,SACVI,SAAU,SAACC,GAAD,OAAWN,GAAWM,EAAMC,OAAOH,QAH/C,SAKI,IAAIpB,MAAM,IAAKE,KAAK,GAAGC,KAAI,SAACqB,EAAGC,GAAJ,OAC3B,wBACEL,MAAOK,EAAQ,EADjB,SAIGA,EAAQ,GAFJ1B,EAAa0B,YAO1B,uBACA,gCACE,wBACEP,KAAK,SACLD,UAAWS,IAAW,SAAuB,IAAbf,GAAkB,UAClDQ,QAtDQ,WAClBP,EAAY,IAkDJ,iCAQA,wBACEM,KAAK,SACLD,UAAWS,IAAW,SAAuB,IAAbf,GAAkB,UAClDQ,QA1DO,WACjBP,EAAY,IAsDJ,4BAQA,wBACEM,KAAK,SACLD,UAAWS,IAAW,UAAsB,IAAZb,GAAqB,UACrDM,QA9DQ,WAClBL,GAAYD,IA0DJ,qBAQA,wBACEK,KAAK,SACLD,UAAU,SACVE,QAlEM,WAChBP,EAAY,GACZE,GAAW,GACXE,EAAU,IA4DF,sBASF,oBAAIC,UAAU,QAAd,SA9GR,WACE,IAAMU,EAAe,UAAI7B,GAAiB8B,QAAO,SAAAC,GAAI,OACnDA,EAAK5B,OAASc,KAehB,OAZAY,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQrB,GACN,KAAK,EACH,OAAOoB,EAAME,cAAcD,GAC7B,KAAK,EACH,OAAOD,EAAM9B,OAAS+B,EAAM/B,OAE9B,QACE,OAAO,MAINY,EACHc,EAAad,UACbc,EA4FKO,GAAoB/B,KAAI,SAAA0B,GAAI,OAC3B,oBACEZ,UAAU,cADZ,SAIGY,GAFIA,eC1IrBM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05b98e65.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst randomValues = new Array(goodsFromServer.length)\n  .fill(1).map(x => x + Math.random());\n\nexport const App: React.FC = () => {\n  const [start, setStart] = useState(false);\n  const [sortType, setSortType] = useState(0);\n  const [reverse, setReverse] = useState(false);\n  const [minLength, setLength] = useState(1);\n\n  function getReorderedGoods() {\n    const visibleGoods = [...goodsFromServer].filter(good => (\n      good.length > minLength\n    ));\n\n    visibleGoods.sort((item1, item2) => {\n      switch (sortType) {\n        case 1:\n          return item1.localeCompare(item2);\n        case 2:\n          return item1.length - item2.length;\n        case 0:\n        default:\n          return 0;\n      }\n    });\n\n    return reverse\n      ? visibleGoods.reverse()\n      : visibleGoods;\n  }\n\n  const startSort = () => {\n    setStart(true);\n  };\n\n  const alpabetSort = () => {\n    setSortType(1);\n  };\n\n  const lengthSort = () => {\n    setSortType(2);\n  };\n\n  const reverseSort = () => {\n    setReverse(!reverse);\n  };\n\n  const resetSort = () => {\n    setSortType(0);\n    setReverse(false);\n    setLength(1);\n  };\n\n  return (\n    <div className=\"App\">\n      {!start && (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={startSort}\n        >\n          Start\n        </button>\n      )}\n\n      {start && (\n        <>\n          <label>\n            Choose a length\n            <select\n              value={minLength}\n              className=\"select\"\n              onChange={(event) => setLength(+event.target.value)}\n            >\n              {(new Array(10)).fill(0).map((_, index) => (\n                <option\n                  value={index + 1}\n                  key={randomValues[index]}\n                >\n                  {index + 1}\n                </option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <div>\n            <button\n              type=\"button\"\n              className={classnames('button', sortType === 1 && 'active')}\n              onClick={alpabetSort}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={classnames('button', sortType === 2 && 'active')}\n              onClick={lengthSort}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={classnames('button', reverse !== false && 'active')}\n              onClick={reverseSort}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={resetSort}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            {getReorderedGoods().map(good => (\n              <li\n                className=\"Goods__item\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}